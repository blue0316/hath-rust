name: Rust

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-20.04
    env:
      CC: clang-17
      CXX: clang-17
      CFLAGS: "-flto -fuse-ld=lld-17"
      CXXFLAGS: "-flto -fuse-ld=lld-17"
    steps:
    - uses: actions/checkout@v3
    - name: Install build tools
      run: |
        wget https://apt.llvm.org/llvm.sh
        chmod +x llvm.sh
        sudo ./llvm.sh 17
        sudo apt-get install -y crossbuild-essential-arm64
    - uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install toolchain
      run: |
        rustup update
        rustup toolchain install nightly
        rustup target add --toolchain nightly x86_64-unknown-linux-gnu aarch64-unknown-linux-gnu
    - name: Build x86_64
      env:
        CARGO_HOST_LINKER: "clang-17"
        CARGO_HOST_RUSTFLAGS: "-Clink-arg=-fuse-ld=lld-17"
        CARGO_TARGET_X86_64_UNKNOWN_LINUX_GNU_RUSTFLAGS: "-Clinker-plugin-lto -Clinker=clang-17 -Clink-arg=-fuse-ld=lld-17 -Clink-arg=--target=x86_64-unknown-linux-gnu"
      run: cargo +nightly -Ztarget-applies-to-host -Zhost-config build --verbose --release --target=x86_64-unknown-linux-gnu
    - uses: actions/upload-artifact@v3
      with:
        name: hath-rust-x86_64
        path: target/x86_64-unknown-linux-gnu/release/hath-rust
    - name: Build aarch64
      env:
        CARGO_HOST_LINKER: "clang-17"
        CARGO_HOST_RUSTFLAGS: "-Clink-arg=-fuse-ld=lld-17"
        CARGO_TARGET_AARCH64_UNKNOWN_LINUX_GNU_RUSTFLAGS: "-Clinker-plugin-lto -Clinker=clang-17 -Clink-arg=-fuse-ld=lld-17 -Clink-arg=--target=aarch64-unknown-linux-gnu"
      run: cargo +nightly -Ztarget-applies-to-host -Zhost-config build --verbose --release --target=aarch64-unknown-linux-gnu
    - uses: actions/upload-artifact@v3
      with:
        name: hath-rust-aarch64
        path: target/aarch64-unknown-linux-gnu/release/hath-rust
  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Build
        run: cargo build --verbose --release
      - uses: actions/upload-artifact@v3
        with:
          name: hath-rust-windows
          path: target/release/hath-rust.exe
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install toolchain
        run: |
          rustup update
          rustup target add aarch64-apple-darwin
      - name: Build x86
        run: cargo build --verbose --release --target x86_64-apple-darwin
      - name: Build ARM64
        run: cargo build --verbose --release --target aarch64-apple-darwin
      - name: Universal binary
        run: lipo -create target/x86_64-apple-darwin/release/hath-rust target/aarch64-apple-darwin/release/hath-rust -output target/release/hath-rust
      - uses: actions/upload-artifact@v3
        with:
          name: hath-rust-macos
          path: target/release/hath-rust
